using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.SceneManagement;

public class GameManager : MonoBehaviour
{
    public static GameManager instance;
    private bool weaponSelected = false;

    private void Awake()
    {
        if (instance == null)
            instance = this;
        else
            Destroy(gameObject);
    }

    // Start is called before the first frame update
    void Start()
    {
        Application.targetFrameRate = 60;
        SetGameState(GameState.MENU);
    }

    public void StartGame()
    {
        if (!weaponSelected)
        {
            Debug.LogWarning("Cannot start game â€” no weapon selected!");
            return;
        }

        SetGameState(GameState.GAME);
    }

    public void StartWave()
    {
        // Reset level-up transition flag for the new wave
        Player.instance.playerLevel.NewWaveStarted();

        // Set game state to gameplay
        SetGameState(GameState.GAME);
    }

    public void ExitGame()
    {
        Application.Quit();
    }

    public void SetWeaponSelected(bool selected)
    {
        weaponSelected = selected;
    }

    public void StartWeaponSelection()
    {
        SetGameState(GameState.WEAPONSELECTION);
    }

    public void StartShop()
    {
        SetGameState(GameState.SHOP);
    }


    // Update is called once per frame
    void Update()
    {
        
    }

    public void SetGameState(GameState gameState)
    {
        IEnumerable<IGameStateListener> gameStateListeners = FindObjectsByType<MonoBehaviour>(FindObjectsSortMode.None).OfType<IGameStateListener>();

        foreach(IGameStateListener gameStateListener in gameStateListeners)
            gameStateListener.GameStateChangedCallback(gameState);

        if (gameState == GameState.WAVETRANSITION || gameState == GameState.CHESTTRANSITION)
        {
            Time.timeScale = 0f; // freeze game
        }
        else
        {
            Time.timeScale = 1f; // resume game
        }

        if (gameState == GameState.GAMEOVER)
            ManageGameover();
    }

    public void WaveCompletedCallback()
    {
        SetGameState(GameState.GAME);
    }

    public void ManageGameover()
    {
        LeanTween.delayedCall(2, () => SceneManager.LoadScene(0));
    }
}

public interface IGameStateListener
{
    void GameStateChangedCallback(GameState gameState);
}
